[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "User Guide: Annual Review Article Topic",
    "section": "",
    "text": "Assignment Flow\nThis project is set up to scaffold this user guide and set you up for success.\nStart at topic.qmd and identify a topic for your user guide.\nOnce you’ve proposed a topic and received my approval/feedback, you can convert the contents of topic.qmd into an introductory paragraph in your report. Please leave the topic.qmd file as an appendix, to document the different stages of this project.\nOnce we’ve agreed on a topic for your user guide, you will proceed to needs.qmd and task-analysis.qmd. Both will be submitted at the same check-in, and both will be included in your final report as appendices. You should be able to re-purpose most of the information in task-analysis.qmd to orient the user to different components of the task you’ve chosen.\nYour next step is to actually write the content that satisfies the work you outlined in task-analysis.qmd.\nOnce you’re finished with that, ideally, you’ll have plenty of time to edit and streamline your report. Feel free to trade reports with a friend and try to complete your friend’s task - this will help you both identify areas where the guide isn’t as clear. Try to complete the task with a different data set - that often helps find trouble spots.\nWhen you submit your final report, you may remove index.qmd from the _quarto.yml file, which will remove this chapter (which is quite unnecessary for your user) from the report. You should also take the time to make sure your name is listed as both author and copyright holder in the _quarto.yml file. Feel free to make a custom cover for your manual if you would like to do so. You can also tweak the CSS/theme for the book, so long as you’re conscious of accessibility concerns.\n\n\n\n\n\n\nBuilding the report\n\n\n\nIf you are using RStudio to complete this report, you can hit (Ctrl/Cmd)-Shift-B to build the whole report. You can also type quarto render . on the command line in the project folder to accomplish the same thing.\nIf you have questions about how to customize or debug your book, it may be helpful to start at the quarto book documentation (Posit PBC 2024).\n\n\n\n\n\n\nPosit PBC. 2024. “Creating a Book. Quarto.” July 1, 2024. https://quarto.org/docs/books/.",
    "crumbs": [
      "Assignment Flow"
    ]
  },
  {
    "objectID": "guide.html",
    "href": "guide.html",
    "title": "1  How to Communicate Hurricane Forecast Uncertainty in Different Ways",
    "section": "",
    "text": "1.1 Introduction\nNatural hazards such as hurricanes, floods, volcanic eruptions, and earthquakes have the potential to impact large populations, making effective mass communication a critical component of disaster preparedness and response. They can cause panic and fear, and people in hurricane-prone areas want to know as much as they can about them when they happen. Hurricanes present a unique challenge due to the inherent uncertainty in their formation, movement, and impact. Forecasting efforts, particularly in the United States, rely on probabilistic models to estimate storm paths, intensity, and associated hazards such as wind damage and storm surges. Administrations like the National Weather Service and the National Ocean and Atmospheric Administration release hazard maps that indicate different levels of information such as cone of uncertainty maps and spaghetti plots. Even with alternative representations, there are many challenges that remain to ensure that the public understands the full scope of hurricane impacts beyond just the predicted track.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Communicate Hurricane Forecast Uncertainty in Different Ways</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Posit PBC. 2024. “Creating a Book. Quarto.” July 1, 2024.\nhttps://quarto.org/docs/books/.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "topic.html",
    "href": "topic.html",
    "title": "Appendix A — Topic",
    "section": "",
    "text": "Pick some subset of the information covered in your annual review article that you are interested in exploring in more detail.\nIdentify the scope of your user guide - what will you cover? Specific software packages? When to use or not to use a specific technique?\nMy topic will be communicating risks of Hurricanes\nI’ll cover the basic visual rules the article gives to how visualizing risk should be done I’ll also cover what should be highlighted when communicating risks of Hurricanes specifically with the use of geographical hazard maps\nThe software package I first thought that would work was the maps package, here you can use the storms dataframe built into the tidyverse package A very easy to use software package I found that works with natural disasters is the hurricaneexposure package\nUPDATE 3/5/25\nI don’t think I’ll be able to plot the predicted path of a hurricane like I wanted using ggplot2, instead I will provide a way to plot the eye path and either wind speed or flood risks and compare the plots based on the data of a hurricane, like Katrina, and compare them to actual released hazard maps published in order to see why it is hard to visualize hazards and risk in a cone map and how they may cause some confusion.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>A</span>  <span class='chapter-title'>Topic</span>"
    ]
  },
  {
    "objectID": "needs.html",
    "href": "needs.html",
    "title": "Appendix B — Needs Assessment",
    "section": "",
    "text": "What does someone trying to accomplish your chosen task need help with?\n\nMy original task, I wanted to try and plot the expected path of a hurricane using an ensemble / spaghetti plot, but I can’t find a good way to do it\n\n\n\nNow I want my task to be just plotting the true path of a hurricane, and comparing it to an official cone map just to compare the two in order to see how it is so hard to visualize hazards for a hurricane\nI want someone to plot the path of Hurricane Katrina and try to scale the color of the path by strength\nThis will be compared to an official map that was sent out during the time\n\nWhat parts are likely to be tricky?\n\nI’ve been trying to figure out how to plot the eye path of a hurricane and it is very tricky\nIt is very challenging to learn how to do these plots using ggplot2 and the methods I’ve found use a different package to visualize plots\nSpatial features are needed in all the sources I have looked for\nIf I can figure it out, I’d like to also plot wind damage ( or more realistically wind speed because I can’t find a dataset with damage ) and also compare that to an official map that was released\n\nWhat resources are already available on this topic that may be helpful? Look for e.g. software vignettes, package documentation, papers about software packages, and so on.\n\nThere is a webpage on using the hurricaneexposure package and its dependencies to visualize hurricane stats, this seems like the easiest way to do this, but it feels to reliant on one package\n\nIn fact, this doesn’t really require a csv file at all\nI don’t want to rely on one package because I feel then that the knowledge gained from this can’t transfer to another skill in R\n\nhttps://cran.r-project.org/web/packages/hurricaneexposure/vignettes/hurricaneexposure.html\nI’ve spent a lot of time looking for a good way to visualize and analyze hurricanes and I think this webpage below is a good way to visualize one hurricane’s path. However, as for speed, I am unsure how I will plot that yet.\nhttps://michaelminn.net/tutorials/r-hurricanes/index.html",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>B</span>  <span class='chapter-title'>Needs Assessment</span>"
    ]
  },
  {
    "objectID": "task-analysis.html",
    "href": "task-analysis.html",
    "title": "Appendix C — Task Analysis",
    "section": "",
    "text": "C.1 Additional Guidance\nYour check-in should answer these basic questions (and similar concerns that apply more directly to your topic).\nOnce you’ve completed the check-in, you can use this section to jump-start an introduction/set-up/getting started section in your user guide. This document should remain as an appendix to your main report.",
    "crumbs": [
      "Appendices",
      "<span class='chapter-number'>C</span>  <span class='chapter-title'>Task Analysis</span>"
    ]
  },
  {
    "objectID": "guide.html#introduction",
    "href": "guide.html#introduction",
    "title": "1  How to Communicate Hurricane Forecast Uncertainty in Different Ways",
    "section": "",
    "text": "1.1.1 What is Hurricane Forecast Uncertainty?\nUncertainty, at its core, refers to anything that is not certain. However, its interpretation varies by discipline. Scientists often view uncertainty as any form of unpredictability, whether it is quantifiable or not.\nTo better structure uncertainty, many frameworks categorize it into three main types:\n\nAleatory Uncertainty (Randomness in Nature) –\n\nThis refers to inherent unpredictability due to natural variability, such as a coin flip or the path of a hurricane.\nIt is expressed through probabilities and statistical distributions.\n\nEpistemic Uncertainty (Knowledge Gaps in Modeling) –\n\nThis arises from limitations in data, models, and assumptions.\nIt reflects an incomplete understanding of a system\nCan also be expressed through probability distributions, confidence intervals, or alternative scenarios\n\nOntological Uncertainty (Limits of the Modeling Process) –\n\nThis represents uncertainty about the entire modeling framework itself.\nIt refers to uncertainties stemming from things we are not aware of, leading to errors in models that are not noticed\nMore challenging to convey, often requires qualitative confidence assessments\n\n\nAleatory uncertainty arises from the natural randomness of hurricane behavior, such as variations in track, intensity, wind speeds, and landfall location.\nEpistemic uncertainty stems from knowledge gaps in atmospheric science and forecasting models, including limitations in data collection and model assumptions.\nLastly, ontological uncertainty reflects the fundamental limitations of our modeling approaches—some aspects of hurricane behavior may be unpredictable or beyond the scope of current scientific understanding.\nUnderstanding the different types of uncertainty associated with hurricanes is essential for improving both forecasting and public response.\n(spiegelhalterRiskUncertaintyCommunication2017?)\n\n\n1.1.2 What Makes a Graphic Good?\nOf course, you want to follow some core basics:\n\nChoose easy to read colors\nHave clear labels and legends\nDon’t add complex shapes or unnecessary chart\n\nWhen making a grahic to communicate uncertainty, assume that people have low numeracy and accommodate your visualization to fit their needs. This means adopting a less is more approach. Having too much information on one visualization is not a good idea. Consider taking that information and making multiple graphics to complement each other. For hurricanes, we have many types of hazard maps: wind maps, flood maps, surge maps. If all the information of these maps were combined with a cone of uncertainty map or spaghetti plot, things could get to painful to look at.\nA good way to check you are making a good graphic is that it follows what you want to communicate and achieves it well. Studying your map for all the possible ways it may be misunderstood, avoiding chart junk, and aiming for a balanced level of simplicity and complexity. (spiegelhalterRiskUncertaintyCommunication2017?)\n\n\n1.1.3 Structure of this User Guide\nThis user guide aims to clarify these types of uncertainty and their implications for hurricane forecasting and risk communication. By improving our understanding of uncertainty, we can enhance public awareness, emergency response strategies, and the effectiveness of hazard communication tools.\n\n\n1.1.4 Comparing the Strengths and Weaknesses of Different Hurricane Graphics\n\n1.1.4.1 Cone of Uncertainty Maps\nA key tool in hurricane communication is the National Hurricane Center’s (NHC) cone of uncertainty, which represents the likely path of a tropical cyclone based on historical forecast errors. In media, the cone is presented in a wide variety of formats, sometimes without the central path.\nA strength of the cone is that it is designed to show where the center of the storm will remain. The cone is based on past performances of recent hurricanes, it predicts that the eye of the storm will stay in the cone 60-70% of the time. However this is kind of where the strengths of the cone of uncertainty.\nPeople are very uncertain about the cone of uncertainty. Public interpretation of this visualization is often flawed. People do not do well with complex graphs, that cone may appear to be the categorical danger zone of the storm. They may trust the central path too much. The size of the hurricane is not really stated or implied and people may get confused on just where we can really expect damage if the hurricane stays on the line or straws away from it.\n\n\n\nFigure 1. Cone of Uncertainty Map of Hurricane Irma : We can be 60-70% sure the hurricane will stay within the cone. This map also shows the expected wind speeds at the eye and places that are put under hurricane and tropical storm warnings and watches. It does fail to capture the size of the hurricane and what areas would be affected had a hurricane cross their path.\n\n\n\n\n1.1.4.2 Spaghetti Plots / Ensemble Lines\nSpaghetti plots showing possible paths of the hurricane have also been tried to communicate hurricane risk. They are the visualization of the eye path of a hurricane using multiple algorithms to determine where the algorithms agree the hurricane will travel. There will a packly dense area of lines and a lot of wild lines that seem to be traveling to places unexpected.\nThe biggest weakness of a spaghetti plot is they can be really complex. Confusion comes when looking where a line strikes a state. If it city is overlapped with a line, does that mean it is more likely to be hit than the city next to with no line overlapping it? No. But people can misunderstand these maps to be like that. Look at Figure 2 which showcases a spaghetti plot of Hurricane Dorian. At the time, President Trump declared on twitter that one of the states that will be hit will be Alabama with Figure 2 supporting his claim. The National Weather Service (NWS) in Birmingham had to announce on twitter that “Alabama will NOT see any impacts from Dorian.” In the end, Alabama did not see any impact, but we are left with a confusing map that can be easily misinterpreted.\n\n\n\nFigure 2. Hurricane Dorian Spaghetti Plot: This plot is very messy and intimidating for those that do not know how to read it. It even states that if this chart causes confusion, please it ignore it. Essentially, you want to look where the lines are most dense as that is where the hurricane is most likely to travel. Even if a state like Alabama has lines crossing the borders, because it is far way from the dense area of lines, it is very unlikely that the hurricane will even cross or enter Alabama.\n\n\nMore recently, researchers like Lace Padilla are studying how to reduce misinterpretation and minimize uncertainty in hurricane maps. Using data from Hurricane Rita, in Figure 3, an example of a good spaghetti plot she published is one that keeps the lines in the most dense zone, simplifies them, and adds a circle along the lines to represent the size of the hurricane. It complements the strengths and weaknesses of a spaghetti plot. (padillaPowerfulInfluenceMarks2020?) (liu2019?)\n\n\n\nFigure 3. Hurricane Rita Spaghetti Plot: This was the best model Researcher Lace Padilla came up with that minimized confusion, but did not eliminate it. It is very informative, it shows the expected hurricane category and size as the lines go on. The confusion from the extra lines is erased, but as a result, some new confusion can be brought as people may think the hurricane will not stray out away from a line.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Communicate Hurricane Forecast Uncertainty in Different Ways</span>"
    ]
  },
  {
    "objectID": "guide.html#making-hurricane-maps-in-r",
    "href": "guide.html#making-hurricane-maps-in-r",
    "title": "1  How to Communicate Hurricane Forecast Uncertainty in Different Ways",
    "section": "1.2 Making Hurricane Maps in R",
    "text": "1.2 Making Hurricane Maps in R\nA hazard map will never be 100% certain, but there are ways to balance both simplicity and complexity to minimize misinterpretation so that the general public can better understand what the map is trying to convey.\nThis user guide assumes you have the data neccessary to create these maps. If you need data, the appendix has a script that downloads data from a webstie. If you modify the script to fit your needs, you can download data from the databases you need.\nSome basic knowledge of the ‘ggplot2’ package is also assumed. To code these spatial datasets, I will be using the geom_sf() function in the ‘ggplot2’ package.\nHere are the libraries necessary needed for this process. (NOTE: Other libraries will be needed if loading in data from a website, they are listed in the chunked they are used in below as well as the Appendix)\n\nlibrary(sf) # for working with spatial data\n\nLinking to GEOS 3.13.0, GDAL 3.10.1, PROJ 9.5.1; sf_use_s2() is TRUE\n\nlibrary(tidyverse) # Data Wrangling and Cleaning \n\nWarning: package 'tibble' was built under R version 4.4.3\n\n\nWarning: package 'purrr' was built under R version 4.4.3\n\n\nWarning: package 'stringr' was built under R version 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2) # for basic maps\nlibrary(mapdata) # for the the world map we'll use with ggplot()\n\nWarning: package 'mapdata' was built under R version 4.4.3\n\n\nLoading required package: maps\n\n\nWarning: package 'maps' was built under R version 4.4.3\n\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(mapview) # for interactive maps \n\nWarning: package 'mapview' was built under R version 4.4.3\n\nlibrary(maps) \n\nFor the world map in ggplot(), we’ll need this. We will save the world and states dataframes from the ‘mapdata’ package into variables to use for plotting.\n\nworld &lt;- map_data(\"world\")\nstates &lt;- map_data('state')\n\nNext we’ll make the base map we will be making hazard maps on, the map of the world (with the United States borders being visible)! We’ll use ggplot() and geom_polygon() to do this. Mapping this follows basic ggplot() rules, but make sure to have “group = group” in the aesethics for geom_polygon() to prevent borders from wanting to conncet to each other.\n\nggplot() + \n  geom_polygon(data = world, aes(x = long, y = lat, group = group), \n                             fill = \"gray90\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\")\n\n\n\n\n\n\n\n\nNow I can load in my code. As mentioned before please see the appendix if you need to download code from a website. The code used in this User Guide comes only from one website, there was trouble keeping code from other databases as some files were too big for GitHub for them to be pushed.\n\nlibrary(rvest)\n\nWarning: package 'rvest' was built under R version 4.4.3\n\n\n\nAttaching package: 'rvest'\n\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n\nurl &lt;- \"https://www.nhc.noaa.gov/gis/archive_forecast_results.php?id=al11&year=2017&name=Hurricane%20IRMA\"\nhtml &lt;- read_html(url)\nlinks &lt;- html_nodes(html, \".content a\")\nkmz_links &lt;- sapply(links, html_attr,  name = \"href\")\nkmz_links &lt;- kmz_links[grepl(\"kmz$\", kmz_links)]\n\nlibrary(purrr)\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\n\n# Create a data frame that has everything\nstorm_tracks &lt;- tibble(link = kmz_links,\n                       storm = str_extract(link, \"[A-Z\\\\d]{8}\"),\n                       time = str_extract(link, \"_[\\\\dAadv]{6,7}\"),\n                       type = str_extract(link, \"CONE|TRACK|WW\"),\n                       filename = str_remove(link, \"../storm_graphics/api\")) |&gt;\n  mutate(url = paste0(\"https://www.nhc.noaa.gov/gis/\", link),\n         filename = paste0(\"data\", filename))\n\nstorm_tracks &lt;- storm_tracks |&gt;\n  mutate(filename = gsub(\"\\\\.kmz$\", \".kml\", filename))\n\nIn this next step, I read every file in the storm_tracks dataframe I created from before by telling ‘mutate()’ to make a new column called data, where I want to read the kml files, which contain spatial data using st_read(). ‘st_read()’ is a function used to read spatial data, so here that is done to every file in the storm_tracks dataframe.\n\n# Read the files in as sub-data-frames\n# Access each data frame using storm_tracks$data[[i]]\n\nlibrary(sf)\nstorm_tracks &lt;- storm_tracks |&gt; \n  mutate(data = purrr::map(filename, st_read))\n\nst_read('data/AL112017_001adv_CONE.kml')\n\nHere is just some basic data wrangling to get the cones and tracks geometry data into two separate dataframes.\n\n# Data Cleaning and Filtering\n# Cones\ncones &lt;- filter(storm_tracks, type == \"CONE\") %&gt;% \n  rename(storm = storm) |&gt; unnest(\"data\")\n\n# Tracks\ntracks &lt;- filter(storm_tracks, type == \"TRACK\") %&gt;% \n  rename(storm_code = storm) |&gt;unnest(\"data\")\n\n\n1.2.1 The Cone of Uncertainty\nWe’ll be looking at only a few cones from the dataset here. Specifically 9 where they are each around 1-3 days apart. I’ve filtered out all the observations in the tracks dataset that do not match with the times I have in the cone observations I want to look at. That way, the tracks will show the central path of their respective cones.\n\ncone10 &lt;- cones %&gt;% \n  slice(seq(1, n(), by = 10))\n\n# keeping all observations in track that have values in the time column that match with my filtered cones dataset\ntrack10 &lt;- semi_join(tracks, cone10, by = 'time')\n\nHere are two basic cone of uncertainty maps. In each, I’ve added the central line path.\n\n# The 4th Row will be Map 1\ncone1 &lt;- cone10 %&gt;% \n  filter(row_number() == 4)\n# Keeping only the same tracks that match with the 4th Row's time value\ntrack1 &lt;- semi_join(track10, cone1, by = 'time')\n\n# The 7th Row will be Map 2\ncone2 &lt;- cone10 %&gt;% \n  filter(row_number() == 7)\n# Keeping only the same tracks that match with the 7th Row's time value\ntrack2 &lt;- semi_join(track10, cone2, by = 'time')\n\n# Map 1\nggplot(world) +\n  geom_polygon(data = world, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  theme_bw() +\n  geom_sf(aes(geometry = geometry, fill = 'red', alpha = 0.5),  show.legend = FALSE, data = cone1) + \n  geom_sf(aes(geometry = geometry),  show.legend = FALSE, data = track1) +\n  coord_sf(xlim = c(-95, -50), ylim = c(10, 45)) + \n  labs(title = 'Map 1:Basic Cone of Uncertainty Map of Hurricane Irma', subtitle = 'September 5th, 2017',\n       x = 'Latitude', \n       y = 'Longitude')\n\n\n\n\n\n\n\n# Map 2\nggplot(world) +\n  geom_polygon(data = world, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  theme_bw() +\n  geom_sf(aes(geometry = geometry, fill = 'red', alpha = 0.5),  show.legend = FALSE, data = cone2) + \n  geom_sf(aes(geometry = geometry),  show.legend = FALSE, data = track2) +\n  coord_sf(xlim = c(-95, -70), ylim = c(20, 45)) + \n  labs(title = 'Map 2:Basic Cone of Uncertainty Map of Hurricane Irma', \n       subtitle = 'September 7th, 2017',\n       x = 'Latitude', \n       y = 'Longitude')\n\n\n\n\n\n\n\n\nMap 3 is just for fun to see how to cone of uncertainty evolved over time. This is not a map that would be sent out You can see that although the cone is only 60-70% sure the hurricane will remain inside, it continued to remain in the boundaries of the cones. However, the central path of a previous cone was not always included in a new cone.\n\nggplot(world) +\n  geom_polygon(data = world, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  theme_bw() +\n  geom_sf(aes(geometry = geometry, fill = 'red', alpha = 0.5),  show.legend = FALSE, data = cone10) + \n  geom_sf(aes(geometry = geometry),  show.legend = FALSE, data = track10) +\n  coord_sf(xlim = c(-95, -25), ylim = c(10, 45)) + \n  labs(title = 'Map 3:Cone of Uncertainty Plots Showcasing Paths Irma Was Predicted to Take',\n       x = 'Latitude', \n       y = 'Longitude')\n\n\n\n\n\n\n\n\n\n\n1.2.2 Spaghetti Plots\nNOTICE: In my example, there is one problem with my spaghetti plot and that is that plot only uses data from one algorithm, whereas in normal spaghetti plots, they use data from multiple models and sources to show where each model seems to agree the hurricane will go as the most likely.\nWith that out of the way, it is important to that this isn’t a ‘true’ spaghetti plot, but this code can be modified to with an extra geom_sf() to include data from other sources. You would do this by filtering or joining your datasets by time or date and that way your lines would all be from the same date.\nIn my example however, I am just taking the expected paths from one model and plotting them. This is just a basic plot made given with the data at hand.\n\nggplot(world) +\n  geom_polygon(data = world, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  theme_bw() +\n  geom_sf(aes(geometry = geometry, alpha = 0.00001),  show.legend = FALSE, data = tracks) + \n  coord_sf(xlim = c(-95, -25), ylim = c(10, 45)) + \n  labs(title = 'Map 4:Rough Spaghetti Plots Showcasing Paths Irma Was Predicted To Take',\n       x = 'Latitude', \n       y = 'Longitude')\n\n\n\n\n\n\n\n\nFrom the map above, we can see the path the hurricane took by looking at where the lines are most dense. Again as noticed at the beginning of this section, I am only using data from one model, whereas normal spaghetti plots use data from multiple which creates a lot of expected paths, some where models agree and others where models do not agree.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Communicate Hurricane Forecast Uncertainty in Different Ways</span>"
    ]
  },
  {
    "objectID": "guide.html#help-with-spatial-data",
    "href": "guide.html#help-with-spatial-data",
    "title": "1  How to Communicate Hurricane Forecast Uncertainty in Different Ways",
    "section": "1.3 Help With Spatial Data",
    "text": "1.3 Help With Spatial Data\nIn my experience, the ‘sf’ package is very helpful and is what I used to work with spatial data. What helped me be able to start plotting spatial data on my own is realizing that spatial data usually has a ‘geometry’ column that has both latitude and longitude points. Whereas a normal dataframe will usually have these be two separate columns. This will affect the aesthetic() portion in ggplot(), and when using spatial data, you most likely will just need ‘geometry = [geometry column of dataframe]’ instead of ’ x = [longitdude column], y = [latitude column].\nI listed below a helpful guide I used to help me work and plot spatial data that covers more than I know what I am confident presenting.\nhttps://ggplot2.tidyverse.org/reference/ggsf.html",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Communicate Hurricane Forecast Uncertainty in Different Ways</span>"
    ]
  },
  {
    "objectID": "guide.html#touching-up",
    "href": "guide.html#touching-up",
    "title": "1  How to Communicate Hurricane Forecast Uncertainty in Different Ways",
    "section": "1.4 Touching Up",
    "text": "1.4 Touching Up\nLabels can be added to show information needed about the maps.\n\nggplot(world) +\n  geom_polygon(data = world, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  geom_polygon(data = states, aes(x = long, y = lat, group = group), \n               fill = \"gray90\", color = \"black\") +\n  theme_bw() +\n  geom_sf(aes(geometry = geometry, fill = 'red', alpha = 0.5),  show.legend = FALSE, data = cone1) + \n  geom_sf(aes(geometry = geometry), data = track1) +\n  coord_sf(xlim = c(-95, -50), ylim = c(10, 45)) + \n  labs(title = 'Basic Cone of Uncertainty Map of Hurricane Irma', subtitle = 'September 6th, 2017',\n       x = 'Latitude', \n       y = 'Longitude')",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Communicate Hurricane Forecast Uncertainty in Different Ways</span>"
    ]
  },
  {
    "objectID": "guide.html#appendix",
    "href": "guide.html#appendix",
    "title": "1  How to Communicate Hurricane Forecast Uncertainty in Different Ways",
    "section": "1.5 Appendix",
    "text": "1.5 Appendix\n\n1.5.1 Libraries Used in This User Guide\n\nlibrary(sf) # for working with spatial data\nlibrary(tidyverse) # Data Wrangling and Cleaning \n\nlibrary(ggplot2) # for basic maps\nlibrary(mapdata) # for the the world map we'll use with ggplot()\n\nlibrary(mapview) # for interactive maps \nlibrary(maps) \n\n\n\n1.5.2 Libraries Used For Downloading Data\n\nlibrary(rvest)\nlibrary(purrr)\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\n\n\n\n1.5.3 Downloading data from a database\nIn my example, I sourced my data from the National Ocean and Atmospheric Association (NOAA). In their hurricanes database, I wanted the predicted forecasts to make my cone of uncertainty and spaghetti plots. Here is the code I ran, that can be modified to fit your needs.\n\nlibrary(rvest)\n\nurl &lt;- \"https://www.nhc.noaa.gov/gis/archive_forecast_results.php?id=al11&year=2017&name=Hurricane%20IRMA\"\nhtml &lt;- read_html(url)\nlinks &lt;- html_nodes(html, \".content a\")\nkmz_links &lt;- sapply(links, html_attr,  name = \"href\")\nkmz_links &lt;- kmz_links[grepl(\"kmz$\", kmz_links)]\n\nlibrary(purrr)\nlibrary(tibble)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\n\n# Create a data frame that has everything\nstorm_tracks &lt;- tibble(link = kmz_links,\n                       storm = str_extract(link, \"[A-Z\\\\d]{8}\"),\n                       time = str_extract(link, \"_[\\\\dAadv]{6,7}\"),\n                       type = str_extract(link, \"CONE|TRACK|WW\"),\n                       filename = str_remove(link, \"../storm_graphics/api\")) |&gt;\n  mutate(url = paste0(\"https://www.nhc.noaa.gov/gis/\", link),\n         filename = paste0(\"data\", filename))\n\nThe following code will download all the data into your files. Running this code may take a long time, so I have commented it out. When modifying the code, please comment out only the first #, as there are explanations inside this code chunk.\n\n# # Download the files in the data directory\n\n# dir.create(\"data\") #Create a new folder called \"data\"\n\n# # This will download all the selected data from your database\n# purrr::walk2(storm_tracks$url, \n#              storm_tracks$filename, \n#              ~download.file(.x, destfile = .y, mode = \"wb\")\n\n# # It is common that the files may needed to be extracted from a zip folder\n# purrr::walk(storm_tracks$filename, ~unzip(., exdir = \"data\"))\n# # This will deleted the zipped folders, leaving you with only the unzipped folders\n# unlink(\"data/*.kmz\")\n\nNow we can get our a nice dataframe that includes all the spatial dataframes from our source using this code.\n\nstorm_tracks &lt;- storm_tracks |&gt;\n  mutate(filename = gsub(\"\\\\.kmz$\", \".kml\", filename))\n\n\n# Read the files in as sub-data-frames\n# Access each data frame using storm_tracks$data[[i]]\n\nlibrary(sf)\nstorm_tracks &lt;- storm_tracks |&gt; \n  mutate(data = purrr::map(filename, st_read)) \n\nThe last bit of code is just for some organization. It filters out all the cone and track data. Depending on how your database orders their data and files, you can modify this as well. Or some data cleaning will be needed on your end.\n\n# Cones\ncones &lt;- filter(storm_tracks, type == \"CONE\") %&gt;% \n  rename(storm = storm) |&gt; unnest(\"data\")\n\n# Tracks\ntracks &lt;- filter(storm_tracks, type == \"TRACK\") %&gt;% \n  rename(storm_code = storm) |&gt;unnest(\"data\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Communicate Hurricane Forecast Uncertainty in Different Ways</span>"
    ]
  },
  {
    "objectID": "guide.html#references",
    "href": "guide.html#references",
    "title": "1  How to Communicate Hurricane Forecast Uncertainty in Different Ways",
    "section": "1.6 References",
    "text": "1.6 References\nLiu, Le, Lace Padilla, Sarah H. Creem-Regehr, and Donald H. House. 2019. “Visualizing Uncertain Tropical Cyclone Predictions Using Representative Samples from Ensembles of Forecast Tracks.” IEEE Transactions on Visualization and Computer Graphics 25 (1): 882–91. https://doi.org/10.1109/TVCG.2018.2865193.\nPadilla, Lace M. K., Sarah H. Creem-Regehr, and William Thompson. 2020. “The Powerful Influence of Marks: Visual and Knowledge-Driven Processing in Hurricane Track Displays.” Journal of Experimental Psychology: Applied 26 (1): 1–15. https://doi.org/10.1037/xap0000245.\nSpiegelhalter, David. 2017. “Risk and Uncertainty Communication.” Annual Review of Statistics and Its Application 4 (1): 31–60. https://doi.org/10.1146/annurev-statistics-010814-020148.\n“Visualise SF Objects - CoordSf.” - CoordSf • Ggplot2, ggplot2.tidyverse.org/reference/ggsf.html.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>How to Communicate Hurricane Forecast Uncertainty in Different Ways</span>"
    ]
  }
]